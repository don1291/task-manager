{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","tasks","setTasks","useState","newTask","setNewTask","useEffect","axios","get","then","response","data","React","createElement","value","onChange","e","target","placeholder","onClick","addTask","task","id","Date","now","text","post","map","key","delete","concat","filter","deleteTask","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6MAgDeA,MA7CHA,KACR,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,IAEvCG,oBAAU,KACNC,IAAMC,IAAI,+BAA+BC,KAAKC,IAC1CR,EAASQ,EAASC,SAEvB,IAgBH,OACIC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SACIC,MAAOV,EACPW,SAAWC,GAAMX,EAAWW,EAAEC,OAAOH,OACrCI,YAAY,eAEhBN,IAAAC,cAAA,UAAQM,QAtBAC,KACZ,MAAMC,EAAO,CAAEC,GAAIC,KAAKC,MAAOC,KAAMrB,GACrCG,IAAMmB,KAAK,8BAA+BL,GAAMZ,KAAK,KACjDP,EAAS,IAAID,EAAOoB,IACpBhB,EAAW,QAkBe,OAC1BO,IAAAC,cAAA,UACKZ,EAAM0B,IAAIN,GACPT,IAAAC,cAAA,MAAIe,IAAKP,EAAKC,IACTD,EAAKI,KACNb,IAAAC,cAAA,UAAQM,QAASA,IAnBjBG,KAChBf,IAAMsB,OAAM,+BAAAC,OAAgCR,IAAMb,KAAK,KACnDP,EAASD,EAAM8B,OAAOV,GAAQA,EAAKC,KAAOA,OAiBPU,CAAWX,EAAKC,KAAK,eC5BrDW,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAApB,EAAA,GAAAP,KAAA2B,EAAAC,KAAA,UAAqB5B,KAAK6B,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACb,EAAG,QAORiC","file":"static/js/main.a4850fe6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState(\"\");\n\n    useEffect(() => {\n        axios.get(\"http://localhost:3000/tasks\").then(response => {\n            setTasks(response.data);\n        });\n    }, []);\n\n    const addTask = () => {\n        const task = { id: Date.now(), text: newTask };\n        axios.post(\"http://localhost:3000/tasks\", task).then(() => {\n            setTasks([...tasks, task]);\n            setNewTask(\"\");\n        });\n    };\n\n    const deleteTask = (id) => {\n        axios.delete(`http://localhost:3000/tasks/${id}`).then(() => {\n            setTasks(tasks.filter(task => task.id !== id));\n        });\n    };\n\n    return (\n        <div>\n            <h1>Task Manager</h1>\n            <input \n                value={newTask} \n                onChange={(e) => setNewTask(e.target.value)} \n                placeholder=\"Add a task\" \n            />\n            <button onClick={addTask}>Add</button>\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id}>\n                        {task.text}\n                        <button onClick={() => deleteTask(task.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}